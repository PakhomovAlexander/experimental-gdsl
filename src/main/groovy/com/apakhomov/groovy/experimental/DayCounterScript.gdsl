package com.apakhomov.groovy.experimental

import org.codehaus.groovy.runtime.GStringImpl

def ctx1 = context(ctype: "java.lang.Integer",
        scope: scriptScope(name: "DayCounter.groovy"))

contributor(ctx1) {
    property name: "daysFromNow", type: "Calendar"
}

def ctx2 = context(scope: closureScope())

contributor(ctx2) {

    // XXX without this line the whole contributor stops working
    String type = psiType

    def classDefinition = findClass('com.apakhomov.groovy.experimental.Metadata')
    def listOfFields = classDefinition.getFields()[0].getInitializer()
    def fieldNames = listOfFields.collect { it.text as String }[0].split(',')
            .collect { it.replaceAll("\\[", '') }
            .collect { it.replaceAll("\\]", '') }
            .collect { it.trim() }

//    println(fieldNames)
//    fieldNames.each {println(it)}

    //listOfFields.collect {println(it.text)}

//    if (!psiClass) return
//
//    def project = place.manager.project

    fieldNames.each {
        property name: it, //fixme
                type: "String"
        println(it)
    }
}